{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createLineSplittingTransform = exports.Deferred = exports.TYPE_PREVIOUS_RESOLVED = exports.TYPE_URL = exports.TYPE_SYMBOL = exports.TYPE_SET = exports.TYPE_REGEXP = exports.TYPE_PROMISE = exports.TYPE_NULL_OBJECT = exports.TYPE_MAP = exports.TYPE_ERROR = exports.TYPE_DATE = exports.TYPE_BIGINT = exports.UNDEFINED = exports.POSITIVE_INFINITY = exports.NULL = exports.NEGATIVE_ZERO = exports.NEGATIVE_INFINITY = exports.NAN = exports.HOLE = void 0;\nexports.HOLE = -1;\nexports.NAN = -2;\nexports.NEGATIVE_INFINITY = -3;\nexports.NEGATIVE_ZERO = -4;\nexports.NULL = -5;\nexports.POSITIVE_INFINITY = -6;\nexports.UNDEFINED = -7;\nexports.TYPE_BIGINT = \"B\";\nexports.TYPE_DATE = \"D\";\nexports.TYPE_ERROR = \"E\";\nexports.TYPE_MAP = \"M\";\nexports.TYPE_NULL_OBJECT = \"N\";\nexports.TYPE_PROMISE = \"P\";\nexports.TYPE_REGEXP = \"R\";\nexports.TYPE_SET = \"S\";\nexports.TYPE_SYMBOL = \"Y\";\nexports.TYPE_URL = \"U\";\nexports.TYPE_PREVIOUS_RESOLVED = \"Z\";\nclass Deferred {\n  promise;\n  resolve;\n  reject;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\nexports.Deferred = Deferred;\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, {\n        stream: true\n      });\n      const parts = (leftover + str).split(\"\\n\");\n      // The last part might be a partial line, so keep it for the next chunk.\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      // If there's any leftover data, enqueue it before closing.\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\nexports.createLineSplittingTransform = createLineSplittingTransform;","map":{"version":3,"names":["Object","defineProperty","exports","value","createLineSplittingTransform","Deferred","TYPE_PREVIOUS_RESOLVED","TYPE_URL","TYPE_SYMBOL","TYPE_SET","TYPE_REGEXP","TYPE_PROMISE","TYPE_NULL_OBJECT","TYPE_MAP","TYPE_ERROR","TYPE_DATE","TYPE_BIGINT","UNDEFINED","POSITIVE_INFINITY","NULL","NEGATIVE_ZERO","NEGATIVE_INFINITY","NAN","HOLE","promise","resolve","reject","constructor","Promise","decoder","TextDecoder","leftover","TransformStream","transform","chunk","controller","str","decode","stream","parts","split","pop","part","enqueue","flush"],"sources":["D:/perpus/frontendd/node_modules/turbo-stream/dist/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLineSplittingTransform = exports.Deferred = exports.TYPE_PREVIOUS_RESOLVED = exports.TYPE_URL = exports.TYPE_SYMBOL = exports.TYPE_SET = exports.TYPE_REGEXP = exports.TYPE_PROMISE = exports.TYPE_NULL_OBJECT = exports.TYPE_MAP = exports.TYPE_ERROR = exports.TYPE_DATE = exports.TYPE_BIGINT = exports.UNDEFINED = exports.POSITIVE_INFINITY = exports.NULL = exports.NEGATIVE_ZERO = exports.NEGATIVE_INFINITY = exports.NAN = exports.HOLE = void 0;\nexports.HOLE = -1;\nexports.NAN = -2;\nexports.NEGATIVE_INFINITY = -3;\nexports.NEGATIVE_ZERO = -4;\nexports.NULL = -5;\nexports.POSITIVE_INFINITY = -6;\nexports.UNDEFINED = -7;\nexports.TYPE_BIGINT = \"B\";\nexports.TYPE_DATE = \"D\";\nexports.TYPE_ERROR = \"E\";\nexports.TYPE_MAP = \"M\";\nexports.TYPE_NULL_OBJECT = \"N\";\nexports.TYPE_PROMISE = \"P\";\nexports.TYPE_REGEXP = \"R\";\nexports.TYPE_SET = \"S\";\nexports.TYPE_SYMBOL = \"Y\";\nexports.TYPE_URL = \"U\";\nexports.TYPE_PREVIOUS_RESOLVED = \"Z\";\nclass Deferred {\n    promise;\n    resolve;\n    reject;\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexports.Deferred = Deferred;\nfunction createLineSplittingTransform() {\n    const decoder = new TextDecoder();\n    let leftover = \"\";\n    return new TransformStream({\n        transform(chunk, controller) {\n            const str = decoder.decode(chunk, { stream: true });\n            const parts = (leftover + str).split(\"\\n\");\n            // The last part might be a partial line, so keep it for the next chunk.\n            leftover = parts.pop() || \"\";\n            for (const part of parts) {\n                controller.enqueue(part);\n            }\n        },\n        flush(controller) {\n            // If there's any leftover data, enqueue it before closing.\n            if (leftover) {\n                controller.enqueue(leftover);\n            }\n        },\n    });\n}\nexports.createLineSplittingTransform = createLineSplittingTransform;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}